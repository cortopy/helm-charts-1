apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "step-issuer.fullname" . }}"
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: {{ .Values.service.controlPlane }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      control-plane: {{ .Values.service.controlPlane }}
  template:
    metadata:
      labels:
        control-plane: {{ .Values.service.controlPlane }}
    spec:
      {{- if $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
      - image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        args: ["--secure-listen-address=0.0.0.0:8443", "--upstream=http://127.0.0.1:8080/", "--logtostderr=true", "--v=10"]
        ports:
        - containerPort: {{ .Values.service.port }}
          name: {{ .Values.service.targetPorts }}
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        name: manager
        args: [
          "--metrics-addr=127.0.0.1:8080",
          {{- if .Values.deployment.args.enableLeaderElection }}
          "--enable-leader-election",
          {{- end }}
          {{- if .Values.deployment.args.disableApprovalCheck }}
          ---disable-approval-check,
          {{- end }}
        ]
        command: ["/manager"]
        {{- if .Values.tunnel.enabled }}
        env:
          - name: STEP_TLS_TUNNEL
            value: /opt/config/tunnel.json
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
          {{- if .Values.tunnel.enabled }}
          # Tunnel configuration
          - name: tunnel-config
            mountPath: /opt/config
            readOnly: true
          - name: tunnel-tls
            mountPath: /opt/tunnel
            readOnly: true
          {{- end }}
{{- with .Values.volumeMounts }}
           # Extra volumeMounts
{{ toYaml . | indent 10 }}
{{- end }}
      volumes:
        {{- if or .Values.tunnel.enabled }}
        # Tunnel configuration
        - name: tunnel-config
          configMap:
            name: {{ include "step-issuer.fullname" . }}-tunnel
        - name: tunnel-tls
{{ toYaml .Values.tunnel.tlsCertsRef | indent 10 }}
        {{- end }}
{{- with .Values.volumes }}
        # Extra volumes
{{ toYaml . | indent 8 }}
{{- end }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
